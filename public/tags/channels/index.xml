<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Channels on Azure Laboratory</title>
    <link>http://localhost:1313/tags/channels/</link>
    <description>Recent content in Channels on Azure Laboratory</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Jan 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/channels/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting Started with Go Channels</title>
      <link>http://localhost:1313/posts/my-sample-post/</link>
      <pubDate>Wed, 15 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/my-sample-post/</guid>
      <description>&lt;h1 id=&#34;getting-started-with-go-channels&#34;&gt;Getting Started with Go Channels&lt;/h1&gt;&#xA;&lt;p&gt;Go&amp;rsquo;s concurrency model is one of its standout features, and channels are at the heart of it. Let&amp;rsquo;s explore how channels work and why they&amp;rsquo;re so powerful.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-are-channels&#34;&gt;What are Channels?&lt;/h2&gt;&#xA;&lt;p&gt;Channels are typed conduits through which you can send and receive values. They act as pipes that connect concurrent goroutines, allowing them to communicate and synchronize their execution.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Don&amp;rsquo;t communicate by sharing memory; share memory by communicating.&amp;rdquo; - Rob Pike&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
